version: "3.9"

services:
  backend:
    build:
      context: ./images/nexttalk_backend
      dockerfile: Dockerfile.dev
    container_name: nexttalk-backend
    ports:
      - "8000:8000"
    tty: true
    stdin_open: true
    volumes:
      - ./images/nexttalk_backend:/app
    environment:
      PG_USER: ${PG_USER}
      PG_PASSWORD: ${PG_PASSWORD}
      PG_DB: ${PG_DB}
      PG_HOST: ${PG_HOST}
      PG_PORT: ${PG_PORT}
      NEXT_PUBLIC_API_URL: http://nexttalk-backend:8000

    env_file:
      - .env
    depends_on:
      - database
    restart: unless-stopped

  frontend:
    build: ./images/nexttalk
    container_name: nexttalk-frontend
    ports:
      - "3000:3000"
    tty: true
    stdin_open: true
    environment:
      NEXT_PUBLIC_API_URL: http://nexttalk-backend:8000
    restart: unless-stopped
    volumes:
      - ./images/nexttalk:/app

  database:
    image: postgres:latest
    container_name: nexttalk-database
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DB}
    volumes:
      - ./images/postgres/initdb.sql:/docker-entrypoint-initdb.d/initdb.sql
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: